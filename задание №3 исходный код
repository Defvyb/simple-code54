#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <locale.h>

struct List
{
	char value[25];
	List* next;

	List(char val[25] = NULL, List* p = NULL) //конструктор
	{
		strcpy(value, val);
		next = p;
	}
};

List* Add_last(char value[25], List* head) //включение элемента в конец списка
{
	List* q = new List(value), * p = head;
	// если список пуст
	if (head == NULL)
		return q;
	// «идем в конец списка» 
	while (p->next != NULL)
		p = p->next;
	p->next = q;
	return head;
}

// создание списка
List* Enter_List()
{
	List* list = NULL;
	char* input = (char*)calloc(25, sizeof(char));
	fgets(input, 25, stdin);
	input[strlen(input) - 1] = '\0';
	while (input[0] != '\0')
	{
		list = Add_last(input, list);
		fgets(input, 25, stdin);
		input[strlen(input) - 1] = '\0';
	}
	return list;
}

int Counter(List* head) // функция, которая определяет количество слов в списке, которые начинаются и заканчиваются на одну и ту же букву.
{
	int n = 0;
	List* p = head;

	if (head == NULL) {
		return 0;
	}
		while (p != NULL) { // пока есть элементы списка
			if (p->value[0] == p->value[strlen(p->value) - 1]) // сравниваем 1 и последний символ
				n++;
			p = p->next; // переход на следующий узел
		}
		return n;
	}
		

int main()
{
	List* l1;

	setlocale(LC_ALL, "Russian");

	printf("Ввод L1:\n");
	l1 =Enter_List();

	printf( "%d", Function(l1));
	return 0;

}
